openapi: 3.0.0
info:
  title: Order API
  version: '1.0'
servers:
  - url: http://localhost:8080
paths:
  /products:
    summary: Create a new product
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - type
                - inventory
              properties:
                name:
                  type: string
                type:
                  type: string
                  enum:
                    - gadget
                    - book
                    - food
                    - other
                inventory:
                  type: integer
                  minimum: 1
                  maximum: 101
            examples:
              SUCCESS:
                value:
                  name: "The Almanac"
                  type: book
                  inventory: 10
      responses:
        '201':
          description: Product created
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                properties:
                  id:
                    type: integer
              examples:
                SUCCESS:
                  value:
                    id: 1
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '503':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
  /findAvailableProducts:
    parameters:
      - schema:
          type: string
        name: type
        in: query
        required: false
        examples:
          SUCCESS:
            value: gadget
      - name: pageSize
        in: header
        schema:
          type: integer
        required: true
        examples:
          SUCCESS:
            value: 10
    get:
      summary: Fetch product details
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              examples:
                SUCCESS:
                  value:
                    - name: iPhone
                      id: 1
                      type: gadget
                      inventory: 100
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '503':
          description: Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'

components:
  schemas:
    Product:
      title: Product Details
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
        type:
          type: string
        inventory:
          type: integer
        description:
          type: string
      required:
        - name
        - id
        - type
        - inventory
    BadRequest:
      title: Bad Request
      type: object
      properties:
        timestamp:
          type: string
        status:
          type: number
        error:
          type: string
        message:
          type: string
